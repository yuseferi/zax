# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: Quality check
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  lint:
    name: Linter
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53.2
          fail_ci_if_error: true
  tests:
      name: Tests
      needs: lint
      runs-on: ubuntu-latest
      steps:
          - name: Checkout repository
            uses: actions/checkout@v3
            with:
              fetch-depth: 0
          - name: Set up Go
            uses: actions/setup-go@v4
          - name: Run tests
            run: go mod download; go test -cover -coverprofile=./unit-cover.txt -race ./...
          - name: Upload coverage reports to Codecov
            uses: codecov/codecov-action@v3
            env:
                CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
            with:
              files: ./unit-cover.txt
              flags: unittests
              name: codecov-umbrella
              fail_ci_if_error: true
              verbose: true